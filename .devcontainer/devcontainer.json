// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.203.0/containers/debian
{
  "name": "Debian",
  "runArgs": ["--init"],
  "build": {
    "dockerfile": "Dockerfile",
    // Update 'VARIANT' to pick an Debian version: bullseye, buster, stretch
    // Use bullseye or stretch on local arm64/Apple Silicon.
    "args": { "VARIANT": "bullseye" }
  },

  // Set *default* container specific settings.json values on container create.
  "settings": {},

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "amazonwebservices.aws-toolkit-vscode",
    "apollographql.vscode-apollo",
    "aws-amplify.aws-amplify-vscode",
    "aws-scripting-guy.cform",
    "christian-kohler.npm-intellisense",
    "cschleiden.vscode-github-actions",
    "csstools.postcss",
    "davidanson.vscode-markdownlint",
    "dbaeumer.vscode-eslint",
    "eamodio.gitlens",
    "eg2.vscode-npm-script",
    "esbenp.prettier-vscode",
    "foxundermoon.shell-format",
    "github.copilot",
    "github.vscode-pull-request-github",
    "graphql.vscode-graphql",
    "kumar-harsh.graphql-for-vscode",
    "ms-vscode.powershell",
    "redhat.vscode-yaml",
    "vsls-contrib.codetour",
    "yzhang.markdown-all-in-one"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
  // "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

  // Uncomment when using a ptrace-based debugger like C++, Go, and Rust
  // "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

  "postCreateCommand": "pwsh ./scripts/Setup-Codespaces.ps1",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  "features": {
    "git": "latest",
    "git-lfs": "latest",
    "github-cli": "latest",
    "azure-cli": "latest",
    "homebrew": "latest",
    "node": "lts/gallium",
    "powershell": "latest"
  }
}
